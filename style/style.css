@import url("https://fonts.googleapis.com/css2?family=Pacifico&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Itim&family=Pacifico&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Itim&family=Nunito:wght@700&family=Pacifico&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  overflow: hidden;
}

body {
  background-image: url(../img/background-farm-game.png); /* It needs ".." to load images because css file is far from 2 steps from img folder */
  background-color: transparent;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1,
h2 {
  color: white;
  font-family: "Pacifico", cursive;
  text-shadow: 2px 2px 3px #562b08;
}

h1 {
  font-size: 5rem;
  text-align: center;
  padding-bottom: 1.5rem;
}

h2 {
  font-size: 3rem;
}

p {
  padding: 0.5rem;
}

img {
  max-width: 40px;
  max-height: 40px;
}

#game {
  backdrop-filter: opacity(100%);
  display: flex;
  flex-direction: row;
  justify-content: space-around; /* better than space-between to adapt the content to =/= screen */
  padding-top: 2rem;
}

#left-article {
  max-width: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 2rem;
}

#right-article {
  max-width: 50%;
  align-items: center;
  padding: 2rem;
}

/* New learning: hide the score at the beginning */
#score-box {
  display: none;
}

#timer {
  display: none;
  font-family: "Itim", cursive;
  font-size: 2rem;
  font-weight: 800;
  color: red;
  background-color: whitesmoke;
  border-radius: 8px;
  border-style: none;
  box-sizing: border-box;
  margin: 0.5rem;
  padding: 0.5rem;
  width: 100px;
  text-align: center;
}

/* Display my 2 elements: score and timer */
.align-score-timer {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.rules {
  background-color: #f0bb62;
  color: white;
  font-family: "Nunito", sans-serif;
  font-size: 3vh;
  font-weight: 800;
  border-radius: 0.5rem;
  border: 1px solid #c58940;
  box-shadow: 10px 5px 10px #c589409d;
  padding: 0 1rem;
  margin: 5rem 3rem;
  justify-content: center;
  align-items: center;
  text-align: justify;
}

.rule-title {
  color: #562b08;
  font-family: "Pacifico", cursive;
  font-size: 3rem;
  padding: 0;
}

#grid {
  max-width: 100%;
  display: grid;
  align-self: center;
  width: 600px;
  grid-template-columns: repeat(
    10,
    1fr
  ); /* Use repeat() notation instead of writing 1fr 10 times */
  grid-template-rows: repeat(10, 1fr);
  border-radius: 1rem;
  margin-right: 2rem;
}
/* Create flexible grid tracks with "fr unit" which represents a fraction of the available space in the grid container.
1fr is for 1 part of the available space.
Using fr we can make our rows and columns behave like flex items.
*/

.cell {
  aspect-ratio: 1; /* Sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions */
  background-color: #f0bb62;
  background-size: 100%;
  background-position: center;
  border: 1px solid #c58940;
}

.mushroom {
  background-image: url(../img/mushroom.png);
  background-repeat: no-repeat;
  background-color: #4e6c50;
  background-size: 80%;
  background-position: center;
}

.yam {
  background-image: url(../img/yam.png);
  background-repeat: no-repeat;
  background-color: #95cd41;
  background-size: 80%;
  background-position: center;
}

.farmer {
  background-image: url(../img/agriculteur.png);
  background-repeat: no-repeat;
  background-color: #f0bb62;
  background-size: 90%;
  background-position: center;
}

dialog {
  background-color: #f0bb62;
  text-align: center;
  padding: 1.5rem;
  border-radius: 0.5rem;
  border: none;
  max-width: 600px;
  margin: auto;
}

dialog::backdrop {
  backdrop-filter: sepia(1) brightness(60%) blur(5px);
}

#message {
  font-family: "Itim", cursive;
  font-size: 2rem;
  color: #562b08;
  padding: 1rem;
}

.game-button {
  font-family: "Itim", cursive;
  font-size: 2rem;
  font-weight: 800;
  padding: 15px 25px;
  color: #562b08;
  background-color: #95cd41;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: background-color 0.2s;
}

/* New learning: change color or text when you hover over an element with the mouse */
.game-button:hover {
  background-color: #5bb318;
}

#start-button {
  font-size: 3rem;
  color: white;
}

/* New learning: ":focus {} pseudo selector"
remove the blue border around my reset button by deleting the automatic focus.
The :focus CSS pseudo-class represents an element (such as a form input) that has received focus. 
It is generally triggered when the user clicks or taps on an element or selects it with the keyboard's Tab key.
*/
:focus,
:focus-visible {
  outline: none;
}

@media (width < 1200px) {
  /* responsive */
  * {
    overflow: visible;
  }

  #game {
    flex-direction: column;
  }

  #left-article,
  #right-article {
    max-width: 100%;
    align-items: center;
  }

  #grid {
    max-width: 100%;
  }
}

h1 {
  font-size: 4rem;
  line-height: 5rem;
}

#start-button {
  margin: 1rem 0 0 1rem;
}

.rules {
  padding: 0 1rem 1rem;
  margin: 1rem;
}

.align-score-timer {
  flex-direction: column;
  align-items: center;
  gap: 0em;
}
